from typing import overload, Any, Callable, TypeVar, Union
from typing import Tuple, List, Sequence, MutableSequence

Callback = Union[Callable[..., None], None]
Buffer = TypeVar('Buffer')
Pointer = TypeVar('Pointer')
Template = TypeVar('Template')

import vtkmodules.vtkCommonCore
import vtkmodules.vtkCommonExecutionModel

class vtkTecplotTableReader(vtkmodules.vtkCommonExecutionModel.vtkTableAlgorithm):
    column_names_on_line:'getset_descriptor'
    file_name:'getset_descriptor'
    generate_pedigree_ids:'getset_descriptor'
    header_lines:'getset_descriptor'
    last_error:'getset_descriptor'
    max_records:'getset_descriptor'
    output_pedigree_ids:'getset_descriptor'
    pedigree_id_array_name:'getset_descriptor'
    skip_column_names:'getset_descriptor'
    def __init__(self, **properties:Any) -> None: ...
    def GeneratePedigreeIdsOff(self) -> None: ...
    def GeneratePedigreeIdsOn(self) -> None: ...
    def GetColumnNamesOnLine(self) -> int: ...
    def GetFileName(self) -> str: ...
    def GetGeneratePedigreeIds(self) -> bool: ...
    def GetHeaderLines(self) -> int: ...
    def GetLastError(self) -> str: ...
    def GetMaxRecords(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type:str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type:str) -> int: ...
    def GetOutputPedigreeIds(self) -> bool: ...
    def GetPedigreeIdArrayName(self) -> str: ...
    def GetSkipColumnNames(self) -> int: ...
    def IsA(self, type:str) -> int: ...
    @staticmethod
    def IsTypeOf(type:str) -> int: ...
    def NewInstance(self) -> 'vtkTecplotTableReader': ...
    def OutputPedigreeIdsOff(self) -> None: ...
    def OutputPedigreeIdsOn(self) -> None: ...
    @staticmethod
    def SafeDownCast(o:'vtkObjectBase') -> 'vtkTecplotTableReader': ...
    def SetColumnNamesOnLine(self, _arg:int) -> None: ...
    def SetFileName(self, _arg:str) -> None: ...
    def SetGeneratePedigreeIds(self, _arg:bool) -> None: ...
    def SetHeaderLines(self, _arg:int) -> None: ...
    def SetMaxRecords(self, _arg:int) -> None: ...
    def SetOutputPedigreeIds(self, _arg:bool) -> None: ...
    def SetPedigreeIdArrayName(self, _arg:str) -> None: ...
    def SetSkipColumnNames(self, _arg:int) -> None: ...

