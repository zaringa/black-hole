from typing import overload, Any, Callable, TypeVar, Union
from typing import Tuple, List, Sequence, MutableSequence

Callback = Union[Callable[..., None], None]
Buffer = TypeVar('Buffer')
Pointer = TypeVar('Pointer')
Template = TypeVar('Template')

import vtkmodules.vtkCommonCore
import vtkmodules.vtkCommonExecutionModel

class vtkOMFReader(vtkmodules.vtkCommonExecutionModel.vtkDataObjectAlgorithm):
    column_major_ordering:'getset_descriptor'
    data_element_array_selection:'getset_descriptor'
    file_name:'getset_descriptor'
    m_time:'getset_descriptor'
    number_of_data_element_arrays:'getset_descriptor'
    write_out_textures:'getset_descriptor'
    def __init__(self, **properties:Any) -> None: ...
    def GetColumnMajorOrdering(self) -> bool: ...
    def GetDataElementArrayName(self, index:int) -> str: ...
    def GetDataElementArraySelection(self) -> 'vtkDataArraySelection': ...
    def GetDataElementArrayStatus(self, name:str) -> bool: ...
    def GetFileName(self) -> str: ...
    def GetMTime(self) -> int: ...
    def GetNumberOfDataElementArrays(self) -> int: ...
    def GetNumberOfGenerationsFromBase(self, type:str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type:str) -> int: ...
    def GetWriteOutTextures(self) -> bool: ...
    def IsA(self, type:str) -> int: ...
    @staticmethod
    def IsTypeOf(type:str) -> int: ...
    def NewInstance(self) -> 'vtkOMFReader': ...
    @staticmethod
    def SafeDownCast(o:'vtkObjectBase') -> 'vtkOMFReader': ...
    def SetColumnMajorOrdering(self, _arg:bool) -> None: ...
    def SetDataElementArrayStatus(self, name:str, status:int) -> None: ...
    def SetFileName(self, _arg:str) -> None: ...
    def SetWriteOutTextures(self, _arg:bool) -> None: ...

