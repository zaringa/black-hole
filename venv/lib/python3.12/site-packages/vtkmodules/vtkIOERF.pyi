from typing import overload, Any, Callable, TypeVar, Union
from typing import Tuple, List, Sequence, MutableSequence

Callback = Union[Callable[..., None], None]
Buffer = TypeVar('Buffer')
Pointer = TypeVar('Pointer')
Template = TypeVar('Template')

import vtkmodules.vtkCommonCore
import vtkmodules.vtkCommonExecutionModel

class vtkERFReader(vtkmodules.vtkCommonExecutionModel.vtkPartitionedDataSetCollectionAlgorithm):
    blocks_selection:'getset_descriptor'
    file_name:'getset_descriptor'
    stage:'getset_descriptor'
    stages_selection:'getset_descriptor'
    variables_selection:'getset_descriptor'
    def __init__(self, **properties:Any) -> None: ...
    def EnableAllBlocks(self) -> None: ...
    def EnableAllVariables(self) -> None: ...
    def GetBlocksSelection(self) -> 'vtkDataArraySelection': ...
    def GetFileName(self) -> str: ...
    def GetNumberOfGenerationsFromBase(self, type:str) -> int: ...
    @staticmethod
    def GetNumberOfGenerationsFromBaseType(type:str) -> int: ...
    def GetStage(self) -> str: ...
    def GetStagesSelection(self) -> 'vtkDataArraySelection': ...
    def GetVariablesSelection(self) -> 'vtkDataArraySelection': ...
    def IsA(self, type:str) -> int: ...
    @staticmethod
    def IsTypeOf(type:str) -> int: ...
    def NewInstance(self) -> 'vtkERFReader': ...
    @staticmethod
    def SafeDownCast(o:'vtkObjectBase') -> 'vtkERFReader': ...
    def SetBlocksStatus(self, name:str, status:int) -> None: ...
    def SetFileName(self, _arg:str) -> None: ...
    def SetStagesStatus(self, name:str, status:int) -> None: ...
    def SetVariablesStatus(self, name:str, status:int) -> None: ...

class vtkHDF5Helper(object): ...

